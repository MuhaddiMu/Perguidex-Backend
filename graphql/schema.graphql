"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Quotation {
    quote: String!
    author: String!
}

type Response {
    status: String!
}

type Task {
    id: Int!
    task: String!
    status: Boolean!
    onDate: DateTime!
    user: User! @belongsTo
}

type DayReview {
    id: Int!
    rate: String!
    reason: String!
    created_at: DateTime!
    user: User! @belongsTo
}

input TaskInput {
    task: String! @rules(apply: ["required"], attribute: "task")
    onDate: String! @rules(apply: ["required"], attribute: "date")
}

input RatingInput {
    rate: String!
        @rules(
            apply: ["required", "in:0.5,1,1.5,2,2.5,3,3.5,4,4.5,5"]
            attribute: "rating"
        )
    reason: String @rules(apply: [], attribute: "reason")
}

type Query {
    Tasks: [Task!]! @guard
    Next7Days: [Task!]! @guard
    Quotation: Quotation @guard
    TodayRating: DayReview @guard
    User: User! @guard
    GetAllTasks(first: Int!, page: Int!): [Task!]! @guard
    GetAllReviews(first: Int!, page: Int!): [DayReview!]! @guard
}

type Mutation {
    CreateTask(input: TaskInput!): Task @guard
    SaveRating(input: RatingInput!): DayReview @guard
    markTaskComplete(id: Int!): Response @guard
    DeleteTask(id: Int!): Response @guard
    EditTask(id: Int!, task: String!): Response @guard
    register(input: RegisterInput @spread): RegisterResponse!
}

#import sanctum.graphql
